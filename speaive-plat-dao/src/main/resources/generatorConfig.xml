<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd" >

<generatorConfiguration>

    <!--指定特定数据库的jdbc驱动jar包的位置-->
    <!--    <classPathEntry location="/Users/xierui/Workspace/mysql-connector-java-8.0.25.jar"/>-->

    <context id="default" targetRuntime="MyBatis3">
        <!-- 查询单条数据插件 -->
        <plugin type="com.itfsw.mybatis.generator.plugins.SelectOneByExamplePlugin"/>
        <!-- MySQL分页插件 -->
        <plugin type="com.itfsw.mybatis.generator.plugins.LimitPlugin">
            <!-- 通过配置startPage影响Example中的page方法开始分页的页码，默认分页从0开始 -->
            <property name="startPage" value="0"/>
        </plugin>
        <!--<plugin type="com.itfsw.mybatis.generator.plugins.ExampleEnhancedPlugin">
            &lt;!&ndash; 是否支持已经过时的andIf方法（推荐使用when代替），默认支持 &ndash;&gt;
            <property name="enableAndIf" value="true"/>
        </plugin>-->
        <plugin type="com.itfsw.mybatis.generator.plugins.ModelColumnPlugin"/>
        <!-- 查询结果选择性返回插件 -->
        <plugin type="com.itfsw.mybatis.generator.plugins.SelectSelectivePlugin"/>
        <plugin type="com.itfsw.mybatis.generator.plugins.BatchInsertPlugin">
            <!--
            开启后可以实现官方插件根据属性是否为空决定是否插入该字段功能
            ！需开启allowMultiQueries=true多条sql提交操作，所以不建议使用！插件默认不开启
            -->
            <property name="allowMultiQueries" value="false"/>
        </plugin>
        <!-- 自定义注释插件 -->
        <plugin type="com.itfsw.mybatis.generator.plugins.CommentPlugin">
            <!-- 自定义模板路径 -->
            <property name="template" value="src/main/resources/mybatis-generator-comment.ftl"/>
        </plugin>

        <!-- 数据Model链式构建插件 -->
        <!--<plugin type="com.itfsw.mybatis.generator.plugins.ModelBuilderPlugin"/>
        <plugin type="com.itfsw.mybatis.generator.plugins.ExampleEnhancedPlugin">
            &lt;!&ndash; 是否支持已经过时的andIf方法（推荐使用when代替），默认支持 &ndash;&gt;
            <property name="enableAndIf" value="true"/>
        </plugin>-->
        <!-- 批量插入插件 -->

        <commentGenerator>
            <property name="suppressDate" value="true"/>
            <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
            <property name="suppressAllComments" value="false"/>
        </commentGenerator>
        <!--数据库链接地址账号密码-->
        <jdbcConnection driverClass="com.mysql.cj.jdbc.Driver"
                        connectionURL="jdbc:mysql://ip:3306/db?useUnicode=true&amp;characterEncoding=UTF-8&amp;useSSL=false&amp;serverTimezone=GMT%2b8&amp;allowPublicKeyRetrieval=true"
                        userId="root" password="password">
            <property name="useInformationSchema" value="true"/>
        </jdbcConnection>
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>
        <!--生成Model类存放位置-->
        <javaModelGenerator targetPackage="com.speaive.plat.dao.module"
                            targetProject="src/main/java">
            <property name="enableSubPackages" value="true"/>
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>
        <!--生成映射文件存放位置-->
        <sqlMapGenerator targetPackage="mapping" targetProject="src/main/resources">
            <property name="enableSubPackages" value="true"/>
            <property name="trimStrings" value="true"/>
        </sqlMapGenerator>
        <!--生成Dao类存放位置-->
        <!-- 客户端代码，生成易于使用的针对Model对象和XML配置文件 的代码
                type="ANNOTATEDMAPPER",生成Java Model 和基于注解的Mapper对象
                type="MIXEDMAPPER",生成基于注解的Java Model 和相应的Mapper对象
                type="XMLMAPPER",生成SQLMap XML文件和独立的Mapper接口
        -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.speaive.plat.dao.mapper"
                             targetProject="src/main/java">
            <property name="enableSubPackages" value="true"/>
            <property name="trimStrings" value="true"/>
        </javaClientGenerator>


        <table tableName="ai_search_conversation" domainObjectName="AiSearchConversationPO"
               mapperName="AiSearchConversationMapper" enableDeleteByPrimaryKey="true"
               enableUpdateByPrimaryKey="true" enableSelectByPrimaryKey="true" enableUpdateByExample="true"
               enableCountByExample="true" enableDeleteByExample="true" enableSelectByExample="true"
               selectByPrimaryKeyQueryId="true" selectByExampleQueryId="true">
            <generatedKey column="id" sqlStatement="MySql" identity="true"/>
        </table>
    </context>
</generatorConfiguration>